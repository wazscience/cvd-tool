/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _js_validation_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./js/validation.js */ \"./src/js/validation.js\");\n/* harmony import */ var _js_calculations_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./js/calculations.js */ \"./src/js/calculations.js\");\n/* harmony import */ var _js_medication_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./js/medication.js */ \"./src/js/medication.js\");\n/* harmony import */ var _js_ui_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./js/ui.js */ \"./src/js/ui.js\");\n// Main entry point for the CVD Risk Toolkit\n\n\n\n\n\n// Initialize the application\ndocument.addEventListener('DOMContentLoaded', () => {\n  if (typeof initializeApp === 'function') {\n    initializeApp();\n  } else {\n    console.error('Application initialization function not found');\n  }\n});\n\n//# sourceURL=webpack://cvd-tool/./src/index.js?");

/***/ }),

/***/ "./src/js/calculations.js":
/*!********************************!*\
  !*** ./src/js/calculations.js ***!
  \********************************/
/***/ (() => {

eval("throw new Error(\"Module build failed (from ./node_modules/babel-loader/lib/index.js):\\nSyntaxError: C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\src\\\\js\\\\calculations.js: Unexpected token, expected \\\",\\\" (39:5)\\n\\n\\u001b[0m \\u001b[90m 37 |\\u001b[39m       check\\u001b[33m:\\u001b[39m (values) \\u001b[33m=>\\u001b[39m values\\u001b[33m.\\u001b[39msbp \\u001b[33m<\\u001b[39m values\\u001b[33m.\\u001b[39mdbp\\u001b[33m,\\u001b[39m\\n \\u001b[90m 38 |\\u001b[39m       message\\u001b[33m:\\u001b[39m \\u001b[32m'Systolic blood pressure cannot be less than diastolic blood pressure'\\u001b[39m\\n\\u001b[31m\\u001b[1m>\\u001b[22m\\u001b[39m\\u001b[90m 39 |\\u001b[39m     }\\u001b[33m;\\u001b[39m  ]\\u001b[33m;\\u001b[39m}\\u001b[33m;\\u001b[39m\\n \\u001b[90m    |\\u001b[39m      \\u001b[31m\\u001b[1m^\\u001b[22m\\u001b[39m\\n \\u001b[90m 40 |\\u001b[39m\\n \\u001b[90m 41 |\\u001b[39m   \\n \\u001b[90m 42 |\\u001b[39m   \\u001b[0m\\n    at constructor (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:19082)\\n    at Parser.raise (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:178064)\\n    at Parser.unexpected (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:178597)\\n    at Parser.expect (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:184532)\\n    at Parser.parseExprList (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:329522)\\n    at Parser.parseArrayLike (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:326779)\\n    at Parser.parseExprAtom (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:307348)\\n    at Parser.parseExprSubscripts (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:300709)\\n    at Parser.parseUpdate (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:300190)\\n    at Parser.parseMaybeUnary (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:299571)\\n    at Parser.parseMaybeUnaryOrPrivate (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:295445)\\n    at Parser.parseExprOps (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:295619)\\n    at Parser.parseMaybeConditional (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:294891)\\n    at Parser.parseMaybeAssign (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:293373)\\n    at C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:292645\\n    at Parser.allowInAnd (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:335863)\\n    at Parser.parseMaybeAssignAllowIn (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:292625)\\n    at Parser.parseObjectProperty (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:324015)\\n    at Parser.parseObjPropValue (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:325028)\\n    at Parser.parsePropertyDefinition (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:322768)\\n    at Parser.parseObjectLike (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:320635)\\n    at Parser.parseExprAtom (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:307418)\\n    at Parser.parseExprSubscripts (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:300709)\\n    at Parser.parseUpdate (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:300190)\\n    at Parser.parseMaybeUnary (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:299571)\\n    at Parser.parseMaybeUnaryOrPrivate (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:295445)\\n    at Parser.parseExprOps (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:295619)\\n    at Parser.parseMaybeConditional (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:294891)\\n    at Parser.parseMaybeAssign (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:293373)\\n    at C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:292645\\n    at Parser.allowInAnd (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:335812)\\n    at Parser.parseMaybeAssignAllowIn (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:292625)\\n    at Parser.parseVar (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:359626)\\n    at Parser.parseVarStatement (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:355061)\\n    at Parser.parseStatementContent (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:345385)\\n    at Parser.parseStatementLike (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:343103)\\n    at Parser.parseStatementListItem (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:342648)\\n    at Parser.parseBlockOrModuleBlockBody (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:357680)\\n    at Parser.parseBlockBody (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:357337)\\n    at Parser.parseBlock (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:356910)\\n    at Parser.parseFunctionBody (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:328299)\\n    at Parser.parseFunctionBodyAndFinish (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:327804)\\n    at C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:361264\\n    at Parser.withSmartMixTopicForbiddingContext (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:335444)\\n    at Parser.parseFunction (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:361219)\\n    at Parser.parseFunctionStatement (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:352496)\\n    at Parser.parseStatementContent (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:343855)\\n    at Parser.parseStatementLike (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:343103)\\n    at Parser.parseStatementListItem (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:342648)\\n    at Parser.parseExportDeclaration (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:375993)\");\n\n//# sourceURL=webpack://cvd-tool/./src/js/calculations.js?");

/***/ }),

/***/ "./src/js/medication.js":
/*!******************************!*\
  !*** ./src/js/medication.js ***!
  \******************************/
/***/ (() => {

eval("throw new Error(\"Module build failed (from ./node_modules/babel-loader/lib/index.js):\\nSyntaxError: C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\src\\\\js\\\\medication.js: Unexpected token, expected \\\",\\\" (190:32)\\n\\n\\u001b[0m \\u001b[90m 188 |\\u001b[39m         onMaximumTherapy\\u001b[33m:\\u001b[39m \\u001b[36mfalse\\u001b[39m\\u001b[33m,\\u001b[39m\\n \\u001b[90m 189 |\\u001b[39m         hypertriglyceridemia\\u001b[33m:\\u001b[39m \\u001b[36mfalse\\u001b[39m\\u001b[33m,\\u001b[39m\\n\\u001b[31m\\u001b[1m>\\u001b[22m\\u001b[39m\\u001b[90m 190 |\\u001b[39m         mixedDyslipidemia\\u001b[33m:\\u001b[39m \\u001b[36mfalse\\u001b[39m\\u001b[33m;\\u001b[39m    }\\u001b[33m;\\u001b[39m\\n \\u001b[90m     |\\u001b[39m                                 \\u001b[31m\\u001b[1m^\\u001b[22m\\u001b[39m\\n \\u001b[90m 191 |\\u001b[39m     \\n \\u001b[90m 192 |\\u001b[39m     \\u001b[90m// Assess current therapy intensity\\u001b[39m\\n \\u001b[90m 193 |\\u001b[39m     \\u001b[36mif\\u001b[39m (data\\u001b[33m.\\u001b[39mstatin \\u001b[33m!==\\u001b[39m \\u001b[32m'none'\\u001b[39m) {\\u001b[0m\\n    at constructor (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:19082)\\n    at Parser.raise (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:178064)\\n    at Parser.unexpected (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:178597)\\n    at Parser.expect (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:184532)\\n    at Parser.parseObjectLike (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:320483)\\n    at Parser.parseExprAtom (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:307418)\\n    at Parser.parseExprSubscripts (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:300709)\\n    at Parser.parseUpdate (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:300190)\\n    at Parser.parseMaybeUnary (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:299571)\\n    at Parser.parseMaybeUnaryOrPrivate (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:295445)\\n    at Parser.parseExprOps (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:295619)\\n    at Parser.parseMaybeConditional (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:294891)\\n    at Parser.parseMaybeAssign (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:293373)\\n    at C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:292645\\n    at Parser.allowInAnd (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:335812)\\n    at Parser.parseMaybeAssignAllowIn (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:292625)\\n    at Parser.parseVar (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:359626)\\n    at Parser.parseVarStatement (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:355061)\\n    at Parser.parseStatementContent (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:345385)\\n    at Parser.parseStatementLike (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:343103)\\n    at Parser.parseStatementListItem (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:342648)\\n    at Parser.parseBlockOrModuleBlockBody (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:357680)\\n    at Parser.parseBlockBody (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:357337)\\n    at Parser.parseBlock (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:356910)\\n    at Parser.parseFunctionBody (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:328299)\\n    at Parser.parseFunctionBodyAndFinish (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:327804)\\n    at C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:361264\\n    at Parser.withSmartMixTopicForbiddingContext (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:335444)\\n    at Parser.parseFunction (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:361219)\\n    at Parser.parseFunctionStatement (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:352496)\\n    at Parser.parseStatementContent (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:343855)\\n    at Parser.parseStatementLike (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:343103)\\n    at Parser.parseStatementListItem (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:342648)\\n    at Parser.parseBlockOrModuleBlockBody (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:357680)\\n    at Parser.parseBlockBody (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:357337)\\n    at Parser.parseBlock (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:356910)\\n    at Parser.parseFunctionBody (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:328299)\\n    at Parser.parseFunctionBodyAndFinish (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:327804)\\n    at C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:361264\\n    at Parser.withSmartMixTopicForbiddingContext (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:335444)\\n    at Parser.parseFunction (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:361219)\\n    at Parser.parseFunctionStatement (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:352496)\\n    at Parser.parseStatementContent (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:343855)\\n    at Parser.parseStatementLike (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:343103)\\n    at Parser.parseStatementListItem (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:342648)\\n    at Parser.parseExportDeclaration (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:375993)\\n    at Parser.maybeParseExportDeclaration (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:374902)\\n    at Parser.parseExport (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:372504)\\n    at Parser.parseStatementContent (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:345900)\\n    at Parser.parseStatementLike (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:343103)\");\n\n//# sourceURL=webpack://cvd-tool/./src/js/medication.js?");

/***/ }),

/***/ "./src/js/ui.js":
/*!**********************!*\
  !*** ./src/js/ui.js ***!
  \**********************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   initializeApp: () => (/* binding */ initializeApp),\n/* harmony export */   openTab: () => (/* binding */ openTab)\n/* harmony export */ });\n// ui.js - User interface functionality\nfunction initializeApp() {\n  /**\n   * UI functionality for CVD Risk Toolkit; */\n\n  /**\n   * Opens the specified tab and handles tab switching; * @param {Event} evt - The click event; * @param {string} tabId - The ID of the tab to open; */\n  function openTab(evt, tabId) {\n    // Hide all tab content\n    const tabContents = document.getElementsByClassName(\"tab-content\");\n    for (let i = 0; i < tabContents.length; i++) {\n      tabContents[i].classList.remove(\"active\");\n    }\n    ;\n    // Remove active class from all tabs\n    const tabs = document.getElementsByClassName(\"tab\");\n    for (let i = 0; i < tabs.length; i++) {\n      tabs[i].classList.remove(\"active\");\n    }\n    ;\n    // Show the selected tab content and mark the button as active\n    document.getElementById(tabId).classList.add(\"active\");\n    evt.currentTarget.classList.add(\"active\");\n  }\n\n  /**\n   * Initialize the application; * This function sets up event listeners and initializes the UI; */\n  function _initializeApp() {\n    console.log(\"Initializing CVD Risk Toolkit...\");\n\n    // Setup event listeners for tabs\n    setupTabEventListeners();\n\n    // Setup card headers\n    setupCardHeaders();\n\n    // Initialize tooltips and other UI elements\n    initializeTooltips();\n    setupModalClose();\n    setupHelpModal();\n    addClinicalValidation();\n\n    // Set up cross-tab data sharing\n    setupCrossTabDataSharing();\n\n    // Setup height toggle event listeners\n    setupHeightToggleListeners();\n\n    // Setup SBP readings toggle\n    setupSBPReadingsToggle();\n\n    // Setup theme toggle\n    setupThemeToggle();\n\n    // Set current date\n    document.querySelector('#results-date span').textContent = new Date().toLocaleDateString();\n    console.log(\"CVD Risk Toolkit initialization complete\");\n  }\n\n  /**\n   * Set up event listeners for tabs; */\n  function setupTabEventListeners() {\n    const tabs = document.querySelectorAll(\".tab\");\n    tabs.forEach(tab => {\n      tab.addEventListener('click', function (event) {\n        event.preventDefault();\n        const tabId = this.getAttribute('data-tab');\n        openTab(event, tabId);\n      });\n    });\n  }\n\n  /**\n   * Set up expandable/collapsible card headers; */\n  function setupCardHeaders() {\n    const cardHeaders = document.querySelectorAll('.card-header');\n    cardHeaders.forEach(header => {\n      header.addEventListener('click', function () {\n        // Toggle active class for header\n        this.classList.toggle('active');\n\n        // Toggle the display of card body\n        const body = this.nextElementSibling;\n        if (body.classList.contains('active')) {\n          body.classList.remove('active');\n          this.querySelector('.toggle-icon').textContent = '▲';\n        } else {\n          body.classList.add('active');\n          this.querySelector('.toggle-icon').textContent = '▼';\n        }\n        ;\n      });\n    });\n  }\n\n  /**\n   * Initialize tooltips for informational icons; */\n  function initializeTooltips() {\n    const tooltipContainers = document.querySelectorAll('.tooltip-container');\n    tooltipContainers.forEach(function (container) {\n      const infoIcon = container.querySelector('.info-icon');\n      const tooltipText = container.querySelector('.tooltip-text');\n      if (infoIcon && tooltipText) {\n        infoIcon.addEventListener('click', function (event) {\n          event.stopPropagation();\n          tooltipText.style.visibility = tooltipText.style.visibility === 'visible' ? 'hidden' : 'visible';\n          tooltipText.style.opacity = tooltipText.style.opacity === '1' ? '0' : '1';\n        });\n        document.addEventListener('click', function () {\n          tooltipText.style.visibility = 'hidden';\n          tooltipText.style.opacity = '0';\n        });\n      }\n      ;\n    });\n  }\n\n  /**\n   * Setup modal close functionality; */\n  function setupModalClose() {\n    // Close modal when close button is clicked\n    const closeButtons = document.querySelectorAll('.close-btn, .modal-close');\n    closeButtons.forEach(function (button) {\n      button.addEventListener('click', function () {\n        const modal = this.closest('.modal');\n        if (modal) {\n          modal.style.display = 'none';\n        }\n        ;\n      });\n    });\n\n    // Close modal when clicking outside of it\n    window.addEventListener('click', function (event) {\n      const modals = document.querySelectorAll('.modal');\n      modals.forEach(function (modal) {\n        if (event.target === modal) {\n          modal.style.display = 'none';\n        }\n        ;\n      });\n    });\n  }\n\n  /**\n   * Setup the help modal tabs; */\n  function setupHelpModal() {\n    // Set up help tab navigation\n    const helpTabs = document.querySelectorAll('.help-tab');\n    helpTabs.forEach(tab => {\n      tab.addEventListener('click', function () {\n        // Remove active class from all tabs and content\n        document.querySelectorAll('.help-tab').forEach(t => t.classList.remove('active'));\n        document.querySelectorAll('.help-content').forEach(c => c.classList.remove('active'));\n\n        // Add active class to clicked tab\n        this.classList.add('active');\n\n        // Show corresponding content\n        const tabId = this.getAttribute('data-tab');\n        document.getElementById(tabId).classList.add('active');\n      });\n    });\n  }\n\n  /**\n   * Set up cross-tab data sharing to allow calculated risk scores; * to impact medication recommendations; */\n  function setupCrossTabDataSharing() {\n    // Listen for risk calculation events\n    document.addEventListener('risk-calculated', function (e) {\n      // Update medication tab with risk information if available\n      if (e.detail && e.detail.riskScore !== undefined) {\n        // Store risk information in session storage for tab persistence\n        sessionStorage.setItem('last-risk-score', e.detail.riskScore);\n        sessionStorage.setItem('risk-calculator-used', e.detail.calculator || 'unknown');\n\n        // Update comparison tab status\n        updateComparisonTabStatus(e.detail.calculator.toLowerCase(), true);\n      }\n      ;\n    });\n\n    // Check if we have stored risk information on page load\n    const storedRisk = sessionStorage.getItem('last-risk-score');\n    const storedCalculator = sessionStorage.getItem('risk-calculator-used');\n    if (storedRisk && storedCalculator) {\n      // Update comparison tab status based on stored information\n      if (storedCalculator === 'FRS') {\n        updateComparisonTabStatus('frs', true);\n      } else if (storedCalculator === 'QRISK3') {\n        updateComparisonTabStatus('qrisk', true);\n      } else if (storedCalculator === 'Combined') {\n        updateComparisonTabStatus('frs', true);\n        updateComparisonTabStatus('qrisk', true);\n      }\n      ;\n    }\n    ;\n  }\n\n  /**\n   * Setup height toggle event listeners; */\n  function setupHeightToggleListeners() {\n    const heightUnit = document.getElementById('qrisk-height-unit');\n    if (heightUnit) {\n      heightUnit.addEventListener('change', function () {\n        toggleHeightInputs('qrisk');\n      });\n    }\n    ;\n  }\n\n  /**\n   * Toggle height inputs between cm and ft/in; * @param {string} prefix - Form prefix ('qrisk'); */\n  function toggleHeightInputs(prefix) {\n    const heightUnit = document.getElementById(`${prefix}-height-unit`).value;\n    const heightInput = document.getElementById(`${prefix}-height`);\n    const heightFtContainer = document.getElementById(`${prefix}-height-ft-container`);\n    if (heightUnit === 'cm') {\n      heightInput.style.display = 'block';\n      heightFtContainer.style.display = 'none';\n\n      // If feet/inches values exist, convert to cm\n      const feetInput = document.getElementById(`${prefix}-height-feet`);\n      const inchesInput = document.getElementById(`${prefix}-height-inches`);\n      if (feetInput.value && feetInput.value.trim() !== '') {\n        const feet = parseFloat(feetInput.value) || 0;\n        const inches = parseFloat(inchesInput.value) || 0;\n        const cm = convertHeightToCm(feet, inches);\n        heightInput.value = cm.toFixed(1);\n      }\n      ;\n    } else {\n      heightInput.style.display = 'none';\n      heightFtContainer.style.display = 'flex';\n\n      // If cm value exists, convert to feet/inches\n      if (heightInput.value && heightInput.value.trim() !== '') {\n        const cm = parseFloat(heightInput.value);\n        const totalInches = cm / 2.54;\n        const feet = Math.floor(totalInches / 12);\n        const inches = Math.round(totalInches % 12);\n        document.getElementById(`${prefix}-height-feet`).value = feet;\n        document.getElementById(`${prefix}-height-inches`).value = inches;\n      }\n      ;\n    }\n    ;\n  }\n\n  /**\n   * Setup SBP readings toggle; */\n  function setupSBPReadingsToggle() {\n    const qriskToggle = document.getElementById('qrisk-toggle-sbp-readings');\n    if (qriskToggle) {\n      qriskToggle.addEventListener('click', function () {\n        const readingsDiv = document.getElementById('qrisk-sbp-readings');\n        if (readingsDiv.style.display === 'none') {\n          readingsDiv.style.display = 'block';\n          this.textContent = 'Hide readings form';\n        } else {\n          readingsDiv.style.display = 'none';\n          this.textContent = 'Calculate from multiple readings';\n        }\n        ;\n      });\n    }\n    ;\n  }\n\n  /**\n   * Setup dark/light theme toggle; */\n  function setupThemeToggle() {\n    const themeToggle = document.getElementById('theme-toggle');\n    if (themeToggle) {\n      // Check if theme preference is stored\n      const currentTheme = localStorage.getItem('theme') || 'light';\n      document.body.classList.toggle('dark-theme', currentTheme === 'dark');\n\n      // Update icon based on current theme\n      updateThemeIcon(currentTheme === 'dark');\n\n      // Add click event\n      themeToggle.addEventListener('click', function () {\n        // Toggle theme\n        const isDarkTheme = document.body.classList.toggle('dark-theme');\n\n        // Save preference\n        localStorage.setItem('theme', isDarkTheme ? 'dark' : 'light');\n\n        // Update icon\n        updateThemeIcon(isDarkTheme);\n      });\n    }\n    ;\n  }\n\n  /**\n   * Update theme toggle icon based on current theme; * @param {boolean} isDarkTheme - Whether dark theme is active; */\n  function updateThemeIcon(isDarkTheme) {\n    const themeToggle = document.getElementById('theme-toggle');\n    if (themeToggle) {\n      if (isDarkTheme) {\n        themeToggle.innerHTML = '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><circle cx=\"12\" cy=\"12\" r=\"5\"></circle><path d=\"M12 1v2M12 21v2M4.2 4.2l1.4 1.4M18.4 18.4l1.4 1.4M1 12h2M21 12h2M4.2 19.8l1.4-1.4M18.4 5.6l1.4-1.4\"></path></svg>';\n        themeToggle.setAttribute('aria-label', 'Switch to light mode');\n      } else {\n        themeToggle.innerHTML = '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><path d=\"M12 3a6 6 0 0 0 9 9 9 9 0 1 1-9-9Z\"></path></svg>';\n        themeToggle.setAttribute('aria-label', 'Switch to dark mode');\n      }\n      ;\n    }\n    ;\n  }\n\n  /**\n   * Handle \"Reset Form\" button clicks; * @param {string} formId - ID of the form to reset; */\n  function resetForm(formId) {\n    const form = document.getElementById(formId);\n    if (!form) {\n      return;\n    }\n    ;\n    // Reset all inputs to default values\n    form.reset();\n\n    // Clear any error styling\n    const errorFields = form.querySelectorAll('.error');\n    errorFields.forEach(field => field.classList.remove('error'));\n\n    // Hide error messages\n    const errorMessages = form.querySelectorAll('.error-message');\n    errorMessages.forEach(message => message.style.display = 'none');\n\n    // Clear any calculated values or results\n    const nonHDLInput = form.querySelector('#med-non-hdl');\n    if (nonHDLInput) {\n      nonHDLInput.value = '';\n      nonHDLInput.disabled = true;\n      const toggleLink = document.getElementById('toggle-manual-non-hdl');\n      if (toggleLink) toggleLink.textContent = 'Enter manually';\n    }\n    ;\n    // Reset PCSK9 details if present\n    const pcsk9Details = document.getElementById('pcsk9-details');\n    if (pcsk9Details) pcsk9Details.style.display = 'none';\n\n    // Reset any dependent selects or fields\n    const statinDoseSelect = form.querySelector('#med-statin-dose');\n    if (statinDoseSelect) {\n      statinDoseSelect.innerHTML = '<option value=\"\" selected>Select dose</option>';\n      statinDoseSelect.disabled = true;\n    }\n    ;\n    const secondaryDetails = form.querySelector('#secondary-details');\n    if (secondaryDetails) secondaryDetails.disabled = true;\n    const intoleranceType = form.querySelector('#med-intolerance-type');\n    if (intoleranceType) intoleranceType.disabled = true;\n\n    // Clear SBP readings if present\n    for (let i = 1; i <= 6; i++) {\n      const reading = form.querySelector(`#${formId.split('-')[0]}-sbp-reading-${i}`);\n      if (reading) reading.value = '';\n    }\n    ;\n    const sbpResult = document.getElementById(`${formId.split('-')[0]}-sbp-sd-result`);\n    if (sbpResult) sbpResult.style.display = 'none';\n\n    // Reset height/feet view if applicable\n    const heightUnit = form.querySelector(`#${formId.split('-')[0]}-height-unit`);\n    if (heightUnit && heightUnit.value === 'ft/in') {\n      heightUnit.value = 'cm';\n      toggleHeightInputs(formId.split('-')[0]);\n    }\n    ;\n    // Update comparison tab status if applicable\n    if (formId === 'frs-form') {\n      updateComparisonTabStatus('frs', false);\n    } else if (formId === 'qrisk-form') {\n      updateComparisonTabStatus('qrisk', false);\n    }\n    ;\n    // Hide results display\n    document.getElementById('results-container').style.display = 'none';\n  }\n\n  /**\n   * Export results to CSV or PDF; * @param {string} format - 'csv' or 'pdf'\n   */\n  function exportResults(format) {\n    const resultsContainer = document.getElementById('results-container');\n    if (!resultsContainer || resultsContainer.style.display === 'none') {\n      showModal('No results to export. Please calculate risk scores first.');\n      return;\n    }\n    ;\n    if (format === 'csv') {\n      exportToCSV();\n    } else if (format === 'pdf') {\n      showPdfPreview();\n    }\n    ;\n  }\n\n  /**\n   * Export results to CSV file; */\n  function exportToCSV() {\n    // Get data from results\n    const riskTitle = document.querySelector('.risk-title')?.textContent || 'CVD Risk Assessment';\n    const baseRisk = document.querySelector('.base-risk')?.textContent || 'N/A';\n    const lpaModifier = document.querySelector('.lpa-modifier')?.textContent || 'N/A';\n    const adjustedRisk = document.querySelector('.adjusted-risk')?.textContent || 'N/A';\n    const riskCategory = document.querySelector('.risk-category')?.textContent || 'N/A';\n    const date = document.querySelector('#results-date span')?.textContent || new Date().toLocaleDateString();\n\n    // Create CSV content\n    let csvContent = 'data:text/csv;charset=utf-8,';\n    csvContent += 'CVD Risk Assessment Results,\\r\\n';\n    csvContent += 'Date,' + date + '\\r\\n\\r\\n';\n    csvContent += 'Assessment Type,' + riskTitle + '\\r\\n';\n    csvContent += 'Base Risk,' + baseRisk + '\\r\\n';\n    csvContent += 'Lp(a) Modifier,' + lpaModifier + '\\r\\n';\n    csvContent += 'Adjusted Risk,' + adjustedRisk + '\\r\\n';\n    csvContent += 'Risk Category,' + riskCategory + '\\r\\n\\r\\n';\n\n    // Add recommendations (cleaned of HTML)\n    const recommendations = document.getElementById('recommendations-content');\n    if (recommendations) {\n      const recItems = recommendations.querySelectorAll('.recommendation-item');\n      if (recItems.length > 0) {\n        csvContent += 'Treatment Recommendations,\\r\\n';\n        recItems.forEach(item => {\n          const title = item.querySelector('strong')?.textContent || '';\n          const content = item.textContent.replace(title, '').trim();\n          csvContent += title + ',' + content.replace(/,/g, ';') + '\\r\\n';\n        });\n      }\n      ;\n    }\n    ;\n    // Create download link\n    const encodedUri = encodeURI(csvContent);\n    const link = document.createElement('a');\n    link.setAttribute('href', encodedUri);\n    link.setAttribute('download', 'cvd_risk_assessment_' + new Date().toISOString().slice(0, 10) + '.csv');\n    document.body.appendChild(link);\n\n    // Trigger download\n    link.click();\n    document.body.removeChild(link);\n  }\n\n  /**\n   * Show PDF preview before export; */\n  function showPdfPreview() {\n    const previewModal = document.getElementById('pdf-preview-modal');\n    const previewContent = document.getElementById('pdf-preview-content');\n    if (!previewModal || !previewContent) {\n      showModal('PDF preview functionality is not available. Please try again later.');\n      return;\n    }\n    ;\n    // Clone the results section for preview\n    const resultsContainer = document.getElementById('results-container');\n    previewContent.innerHTML = '';\n    previewContent.appendChild(resultsContainer.cloneNode(true));\n\n    // Add preview styling\n    previewContent.querySelector('.export-section').style.display = 'none';\n\n    // Show the preview modal\n    previewModal.style.display = 'block';\n\n    // Setup download button\n    document.getElementById('download-pdf-btn').addEventListener('click', function () {\n      // In a real implementation, this would use a library like jsPDF or html2pdf\n      // For this demo, we'll just show a message\n      showModal('PDF generation would be implemented here with a library like jsPDF or html2pdf.');\n      previewModal.style.display = 'none';\n    });\n  }\n\n  // Initialize the application when the DOM is fully loaded\n  document.addEventListener('DOMContentLoaded', initializeApp);\n}\nfunction openTab(evt, tabId) {\n  // Implementation\n}\n\n// Make functions available globally for backward compatibility\nwindow.initializeApp = initializeApp;\nwindow.openTab = openTab;\n\n//# sourceURL=webpack://cvd-tool/./src/js/ui.js?");

/***/ }),

/***/ "./src/js/validation.js":
/*!******************************!*\
  !*** ./src/js/validation.js ***!
  \******************************/
/***/ (() => {

eval("throw new Error(\"Module build failed (from ./node_modules/babel-loader/lib/index.js):\\nSyntaxError: C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\src\\\\js\\\\validation.js: Unexpected token, expected \\\",\\\" (65:22)\\n\\n\\u001b[0m \\u001b[90m 63 |\\u001b[39m                   parseFloat(field\\u001b[33m.\\u001b[39mgetAttribute(\\u001b[32m'max'\\u001b[39m) \\u001b[33m||\\u001b[39m \\u001b[32m'Infinity'\\u001b[39m)\\u001b[33m,\\u001b[39m\\n \\u001b[90m 64 |\\u001b[39m                   field\\u001b[33m.\\u001b[39mpreviousElementSibling\\u001b[33m?\\u001b[39m\\u001b[33m.\\u001b[39mtextContent \\u001b[33m||\\u001b[39m field\\u001b[33m.\\u001b[39mid\\u001b[33m,\\u001b[39m\\n\\u001b[31m\\u001b[1m>\\u001b[22m\\u001b[39m\\u001b[90m 65 |\\u001b[39m                   \\u001b[36mtrue\\u001b[39m\\u001b[33m;\\u001b[39m              )\\u001b[33m;\\u001b[39m\\n \\u001b[90m    |\\u001b[39m                       \\u001b[31m\\u001b[1m^\\u001b[22m\\u001b[39m\\n \\u001b[90m 66 |\\u001b[39m               \\n \\u001b[90m 67 |\\u001b[39m               \\u001b[36mif\\u001b[39m (\\u001b[33m!\\u001b[39mresult\\u001b[33m.\\u001b[39misValid) {\\n \\u001b[90m 68 |\\u001b[39m                   errors\\u001b[33m.\\u001b[39mpush(result\\u001b[33m.\\u001b[39mmessage)\\u001b[33m;\\u001b[39m\\u001b[0m\\n    at constructor (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:19082)\\n    at Parser.raise (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:178064)\\n    at Parser.unexpected (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:178597)\\n    at Parser.expect (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:184532)\\n    at Parser.parseCallExpressionArguments (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:305315)\\n    at Parser.parseCoverCallAndAsyncArrowHead (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:303353)\\n    at Parser.parseSubscript (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:301627)\\n    at Parser.parseSubscripts (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:301005)\\n    at Parser.parseExprSubscripts (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:300822)\\n    at Parser.parseUpdate (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:300190)\\n    at Parser.parseMaybeUnary (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:299571)\\n    at Parser.parseMaybeUnaryOrPrivate (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:295445)\\n    at Parser.parseExprOps (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:295619)\\n    at Parser.parseMaybeConditional (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:294891)\\n    at Parser.parseMaybeAssign (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:293373)\\n    at C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:292645\\n    at Parser.allowInAnd (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:335812)\\n    at Parser.parseMaybeAssignAllowIn (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:292625)\\n    at Parser.parseVar (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:359626)\\n    at Parser.parseVarStatement (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:355061)\\n    at Parser.parseStatementContent (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:345385)\\n    at Parser.parseStatementLike (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:343103)\\n    at Parser.parseStatementListItem (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:342648)\\n    at Parser.parseBlockOrModuleBlockBody (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:357680)\\n    at Parser.parseBlockBody (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:357337)\\n    at Parser.parseBlock (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:356910)\\n    at Parser.parseStatementContent (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:345525)\\n    at Parser.parseStatementLike (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:343103)\\n    at Parser.parseStatementOrSloppyAnnexBFunctionDeclaration (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:342908)\\n    at Parser.parseIfStatement (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:352655)\\n    at Parser.parseStatementContent (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:344072)\\n    at Parser.parseStatementLike (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:343103)\\n    at Parser.parseStatementListItem (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:342648)\\n    at Parser.parseBlockOrModuleBlockBody (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:357680)\\n    at Parser.parseBlockBody (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:357337)\\n    at Parser.parseBlock (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:356910)\\n    at Parser.parseFunctionBody (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:328299)\\n    at Parser.parseArrowExpression (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:327431)\\n    at Parser.parseExprAtom (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:309808)\\n    at Parser.parseExprSubscripts (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:300709)\\n    at Parser.parseUpdate (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:300190)\\n    at Parser.parseMaybeUnary (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:299571)\\n    at Parser.parseMaybeUnaryOrPrivate (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:295445)\\n    at Parser.parseExprOps (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:295619)\\n    at Parser.parseMaybeConditional (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:294891)\\n    at Parser.parseMaybeAssign (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:293373)\\n    at C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:292645\\n    at Parser.allowInAnd (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:335863)\\n    at Parser.parseMaybeAssignAllowIn (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:292625)\\n    at Parser.parseExprListItem (C:\\\\Users\\\\manji\\\\Documents\\\\GitHub\\\\cvd-tool\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:1:330329)\");\n\n//# sourceURL=webpack://cvd-tool/./src/js/validation.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.js");
/******/ 	
/******/ })()
;